#!/usr/bin/env bash

set -e

source /var/vcap/jobs/garden/bin/envs
source /var/vcap/packages/greenskeeper/bin/system-preparation

groot_config_dir="$GARDEN_DIR/config"
export XDG_RUNTIME_DIR=/var/vcap/data/garden/runc/

id_map_start=65536

<%# setup_cmd="/var/vcap/packages/guardian/bin/gdn setup" %>
<%# setup_cmd="$setup_cmd --rootless-uid $MAXIMUS --rootless-gid $MAXIMUS" %>
<%# $setup_cmd %>

/var/vcap/packages/guardian/bin/gdn \
server \
<% if p("garden.listen_network") == "tcp" %> \
<% ip, port = p("garden.listen_address").split(":") %> \
  --bind-ip=<%= ip %> \
  --bind-port=<%= port %> \
<% else %> \
  --bind-socket=<%= p("garden.listen_address") %> \
<% end %> \
  --depot=$DEPOT_PATH \
  --properties-path=/var/vcap/data/garden/props.json \
  --port-pool-properties-path=/var/vcap/data/garden/port-pool-props.json \
  --iptables-bin=/var/vcap/packages/iptables/sbin/iptables \
  --iptables-restore-bin=/var/vcap/packages/iptables/sbin/iptables-restore \
  --init-bin="/var/vcap/packages/guardian/bin/init" \
  --dadoo-bin=/var/vcap/packages/guardian/bin/dadoo \
  --nstar-bin=/var/vcap/packages/guardian/bin/nstar \
  --tar-bin=/var/vcap/packages/tar/tar \
  --log-level=<%= p("garden.log_level") %> \
  --mtu=<%= p("garden.network_mtu") %> \
  --network-pool=<%= p("garden.network_pool") %> \
<% p("garden.deny_networks").each do |network| %> \
  --deny-network=<%= network %> \
<% end %> \
<% if p("garden.destroy_containers_on_start") %> \
  --destroy-containers-on-startup \
<% end %> \
<% if p("garden.allow_host_access") %> \
  --allow-host-access \
<% end %> \
<% if_p("garden.debug_listen_address") do |debug_listen_address| %> \
  <% debug_ip, debug_port = debug_listen_address.split(":") %> \
  --debug-bind-ip=<%= debug_ip %> \
  --debug-bind-port=<%= debug_port %> \
<% end %> \
  --default-rootfs=<%= p("garden.default_container_rootfs") %> \
  --default-grace-time=<%= p("garden.default_container_grace_time") %> \
  --default-container-blockio-weight=<%= p("garden.default_container_blockio_weight") %> \
<% if p("garden.deprecated_use_garden_shed") %> \
  --graph-cleanup-threshold-in-megabytes=<%= p("garden.graph_cleanup_threshold_in_mb") %> \
<% end %> \
<% if_p("garden.max_containers") do |max_containers| %> \
  --max-containers=<%= max_containers %> \
<% end %> \
<% if_p("garden.cpu_quota_per_share_in_us") do |quota_per_share| %> \
  --cpu-quota-per-share=<%= quota_per_share %> \
<% end %> \
<% if_p("garden.experimental_tcp_mem_limit_in_bytes") do |tcp_memory| %> \
  --tcp-memory-limit=<%= tcp_memory %> \
<% end %> \
  --runtime-plugin=<%= p("garden.runtime_plugin", "/var/vcap/packages/runc/bin/runc") %> \
<% if_p("garden.image_plugin") do |plugin| %> \
  --image-plugin=<%= plugin %> \
  <% p("garden.image_plugin_extra_args").each do |arg| %> \
  --image-plugin-extra-arg=<%= arg %> \
  <% end %> \
<% end %> \
<% if_p("garden.privileged_image_plugin") do |plugin| %> \
  --privileged-image-plugin=<%= plugin %> \
  <% p("garden.privileged_image_plugin_extra_args").each do |arg| %> \
  --privileged-image-plugin-extra-arg=<%= arg %> \
  <% end %> \
<% end %> \
<% if p("garden.image_plugin", "") == "" %> \
  <% if p("garden.deprecated_use_garden_shed") %> \
  --graph=$GRAPH_PATH \
  <% else %> \
  --image-plugin=/var/vcap/packages/grootfs/bin/grootfs \
  --image-plugin-extra-arg="--config" \
  --image-plugin-extra-arg=$groot_config_dir/grootfs_config.yml \
  <% end %> \
<% end %> \
<% if p("garden.privileged_image_plugin", "") == "" %> \
<% if !p("garden.deprecated_use_garden_shed") && !p("garden.experimental_rootless_mode") %> \
  --privileged-image-plugin=/var/vcap/packages/grootfs/bin/grootfs \
  --privileged-image-plugin-extra-arg="--config" \
  --privileged-image-plugin-extra-arg=$groot_config_dir/privileged_grootfs_config.yml \
<% end %> \
<% end %> \
<% if_p("garden.network_plugin") do |plugin| %> \
  --network-plugin=<%= plugin %> \
  <% p("garden.network_plugin_extra_args").each do |arg| %> \
  --network-plugin-extra-arg=<%= arg %> \
  <% end %> \
<% end %> \
<% if_p("garden.docker_registry_endpoint") do |endpoint| %> \
  --docker-registry=<%= endpoint %> \
<% end %> \
<% if_p("garden.dropsonde.origin") do |origin| %> \
  --dropsonde-origin=<%= origin %> \
<% end %> \
<% if_p("garden.dropsonde.destination") do |destination| %> \
  --dropsonde-destination=<%= destination %> \
<% end %> \
<% if_p("garden.port_pool.start") do |start| %> \
  --port-pool-start=<%= start %> \
<% end %> \
<% if_p("garden.port_pool.size") do |size| %> \
  --port-pool-size=<%= size %> \
<% end %> \
<% if p("garden.deprecated_use_garden_shed") %> \
<% p("garden.insecure_docker_registry_list").each do |url| %> \
  --insecure-docker-registry=<%= url %> \
<% end %> \
<% end %> \
<% p("garden.persistent_image_list").each do |url| %> \
  --persistent-image=<%= url %> \
<% end %> \
<% p("garden.dns_servers").each do |server| %> \
  --dns-server=<%= server %> \
<% end %> \
<% p("garden.additional_dns_servers").each do |server| %> \
  --additional-dns-server=<%= server %> \
<% end %> \
<% p("garden.additional_host_entries").each do |host_entry| %> \
  --additional-host-entry="<%= host_entry %>" \
<% end %> \
<% if !p("garden.apparmor_profile").empty? %> \
  --apparmor=<%= p("garden.apparmor_profile") %> \
<% end %> \
<% if p("garden.cleanup_process_dirs_on_wait") %> \
  --cleanup-process-dirs-on-wait \
<% end %> \
<% if p("garden.experimental_rootless_mode") %> \
  --disable-privileged-containers \
<% end %> \
--uid-map-start="$id_map_start" \
--uid-map-length=$((MAXIMUS-id_map_start)) \
--gid-map-start="$id_map_start" \
--gid-map-length=$((MAXIMUS-id_map_start))
